{"ast":null,"code":"import { createStore } from 'redux';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst reducerCounter = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    // redux would not merge your changes with existing state.\n    // so therefore even we didnt update showCounter, we still need to update it\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  // alway return a brand new object\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst store = createStore(reducerCounter);\n\n// do not subsribe\n// now connect to the React project\n\n// only one redux store, provide the store once \nexport default store;","map":{"version":3,"names":["createStore","initialState","counter","showCounter","reducerCounter","state","action","type","amount","store"],"sources":["/Users/jackylian/Downloads/React-Study/Redux/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux'\n\nconst initialState = {counter:0, showCounter:true}\n\nconst reducerCounter = (state= initialState,action) => {\n\n    if(action.type === \"increment\"){\n        // redux would not merge your changes with existing state.\n        // so therefore even we didnt update showCounter, we still need to update it\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        }\n    }\n\n    // alway return a brand new object\n\n    if(action.type === \"increase\"){\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        }\n    }\n\n    if(action.type === \"decrement\"){\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        }\n    }\n\n    if(action.type === \"toggle\"){\n        return {\n            counter: state.counter,\n            showCounter: !state.showCounter\n        }\n    }\n\n    return state\n\n}\n\nconst store = createStore(reducerCounter)\n\n// do not subsribe\n// now connect to the React project\n\n// only one redux store, provide the store once \nexport default store\n\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AAEjC,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAC,CAAC;EAAEC,WAAW,EAAC;AAAI,CAAC;AAElD,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAEJ,YAAY,EAACK,MAAM,KAAK;EAEnD,IAAGA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAC;IAC3B;IACA;IACA,OAAO;MACHL,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEE,KAAK,CAACF;IACvB,CAAC;EACL;;EAEA;;EAEA,IAAGG,MAAM,CAACC,IAAI,KAAK,UAAU,EAAC;IAC1B,OAAO;MACHL,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAGI,MAAM,CAACE,MAAM;MACtCL,WAAW,EAAEE,KAAK,CAACF;IACvB,CAAC;EACL;EAEA,IAAGG,MAAM,CAACC,IAAI,KAAK,WAAW,EAAC;IAC3B,OAAO;MACHL,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEE,KAAK,CAACF;IACvB,CAAC;EACL;EAEA,IAAGG,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAC;IACxB,OAAO;MACHL,OAAO,EAAEG,KAAK,CAACH,OAAO;MACtBC,WAAW,EAAE,CAACE,KAAK,CAACF;IACxB,CAAC;EACL;EAEA,OAAOE,KAAK;AAEhB,CAAC;AAED,MAAMI,KAAK,GAAGT,WAAW,CAACI,cAAc,CAAC;;AAEzC;AACA;;AAEA;AACA,eAAeK,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}