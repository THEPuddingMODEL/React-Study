{"ast":null,"code":"var _jsxFileName = \"/Users/jackylian/Downloads/React-Study/Redux/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport classes from './Counter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// selector allows us to select part of state\n// if is a class bsased, connect function can be used. wrapper around class component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  // useDisatch gives a function dispatch we can use\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter);\n\n  // recieve latest counter automatically. New state will trigger state update \n  // if this component would be removed from the DOM, subsription will be canclled\n\n  const toggleCounterHandler = () => {};\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"gthwM6sqboLtlTmr2wLRFX51eJQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["classes","useSelector","useDispatch","jsxDEV","_jsxDEV","Counter","_s","dispatch","counter","state","toggleCounterHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","$RefreshReg$"],"sources":["/Users/jackylian/Downloads/React-Study/Redux/src/components/Counter.js"],"sourcesContent":["import classes from './Counter.module.css';\nimport {useSelector, useDispatch} from 'react-redux'\n\n// selector allows us to select part of state\n// if is a class bsased, connect function can be used. wrapper around class component\n\nconst Counter = () => {\n\n  // useDisatch gives a function dispatch we can use\n  const dispatch = useDispatch()\n  const counter = useSelector(state=>state.counter)\n\n  // recieve latest counter automatically. New state will trigger state update \n  // if this component would be removed from the DOM, subsription will be canclled\n\n  const toggleCounterHandler = () => {};\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{counter}</div>\n      <div>\n        <button>\n          Increment\n        </button>\n\n        <button>\n          Decrement\n        </button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;;AAEpD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB;EACA,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,OAAO,GAAGP,WAAW,CAACQ,KAAK,IAAEA,KAAK,CAACD,OAAO,CAAC;;EAEjD;EACA;;EAEA,MAAME,oBAAoB,GAAGA,CAAA,KAAM,CAAC,CAAC;EAErC,oBACEN,OAAA;IAAMO,SAAS,EAAEX,OAAO,CAACQ,OAAQ;IAAAI,QAAA,gBAC/BR,OAAA;MAAAQ,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBZ,OAAA;MAAKO,SAAS,EAAEX,OAAO,CAACiB,KAAM;MAAAL,QAAA,EAAEJ;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9CZ,OAAA;MAAAQ,QAAA,gBACER,OAAA;QAAAQ,QAAA,EAAQ;MAER;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETZ,OAAA;QAAAQ,QAAA,EAAQ;MAER;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNZ,OAAA;MAAQc,OAAO,EAAER,oBAAqB;MAAAE,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEX,CAAC;AAACV,EAAA,CA3BID,OAAO;EAAA,QAGMH,WAAW,EACZD,WAAW;AAAA;AAAAkB,EAAA,GAJvBd,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}