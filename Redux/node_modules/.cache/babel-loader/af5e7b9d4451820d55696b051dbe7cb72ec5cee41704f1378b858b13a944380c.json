{"ast":null,"code":"var _jsxFileName = \"/Users/jackylian/Downloads/React-Study/Redux/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport classes from './Counter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// selector allows us to select part of state\n// if is a class bsased, connect function can be used. wrapper around class component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  // useDisatch gives a function dispatch we can use\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter);\n\n  // useSelector will make sure it is the latest data, and will do stae update \n  const showCounter = useSelector(state => state.showCounter);\n\n  // recieve latest counter automatically. New state will trigger state update \n  // if this component would be removed from the DOM, subsription will be canclled\n\n  const incremtnHandler = () => {\n    dispatch({\n      type: 'increment'\n    });\n  };\n  const increaseHandler = () => {\n    dispatch({\n      type: 'increase',\n      amount: 5\n    });\n  };\n  const decremtnHandler = () => {\n    dispatch({\n      type: 'decrement'\n    });\n  };\n  const toggleCounterHandler = () => {\n    dispatch({\n      type: \"toggle\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incremtnHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increase by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decremtnHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n// how to use redux with class based component\n// class Counter extends Component {\n\n//   incremtnHandler{\n\n//     dispatch({type:'increment'})\n\n//   }\n\n//   decremtnHandler {\n//     dispatch({type:'decrement'})\n//   }\n\n//   toggleCounterHandler {}\n\n//   render(){\n\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{counter}</div>\n//         <div>\n//           <button onClick={this.incremtnHandler}>\n//             Increment\n//           </button>\n\n//           <button onClick={this.decremtnHandler}>\n//             Decrement\n//           </button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n\n//   }\n// }\n\n// // connect is a higher order component, execution will return a new function\n// // this function then takes counter\n// export default connect()(Counter);\n_s(Counter, \"K8sD1S6QxuN5wk6p12Sa6g8roDA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["classes","useSelector","useDispatch","jsxDEV","_jsxDEV","Counter","_s","dispatch","counter","state","showCounter","incremtnHandler","type","increaseHandler","amount","decremtnHandler","toggleCounterHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","$RefreshReg$"],"sources":["/Users/jackylian/Downloads/React-Study/Redux/src/components/Counter.js"],"sourcesContent":["import classes from './Counter.module.css';\nimport {useSelector, useDispatch} from 'react-redux'\n\n// selector allows us to select part of state\n// if is a class bsased, connect function can be used. wrapper around class component\n\nconst Counter = () => {\n\n  // useDisatch gives a function dispatch we can use\n  const dispatch = useDispatch()\n  const counter = useSelector(state=>state.counter)\n\n  // useSelector will make sure it is the latest data, and will do stae update \n  const showCounter = useSelector(state=>state.showCounter)\n\n  // recieve latest counter automatically. New state will trigger state update \n  // if this component would be removed from the DOM, subsription will be canclled\n\n  const incremtnHandler = ()=>{\n\n    dispatch({type:'increment'})\n\n  }\n\n  const increaseHandler = ()=>{\n\n    dispatch({type:'increase', amount: 5})\n\n  }\n\n  const decremtnHandler = ()=>{\n    dispatch({type:'decrement'})\n  }\n\n  const toggleCounterHandler = () => {\n    dispatch({type:\"toggle\"})\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{counter}</div>\n      <div>\n        <button onClick={incremtnHandler}>\n          Increment\n        </button>\n\n        <button onClick={increaseHandler}>\n          Increase by 5\n        </button>\n\n        <button onClick={decremtnHandler}>\n          Decrement\n        </button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\n// how to use redux with class based component\n// class Counter extends Component {\n\n//   incremtnHandler{\n\n//     dispatch({type:'increment'})\n\n//   }\n\n//   decremtnHandler {\n//     dispatch({type:'decrement'})\n//   }\n\n//   toggleCounterHandler {}\n\n//   render(){\n\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{counter}</div>\n//         <div>\n//           <button onClick={this.incremtnHandler}>\n//             Increment\n//           </button>\n  \n//           <button onClick={this.decremtnHandler}>\n//             Decrement\n//           </button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n\n//   }\n// }\n\n// // connect is a higher order component, execution will return a new function\n// // this function then takes counter\n// export default connect()(Counter);\n\nexport default Counter\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;;AAEpD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB;EACA,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,OAAO,GAAGP,WAAW,CAACQ,KAAK,IAAEA,KAAK,CAACD,OAAO,CAAC;;EAEjD;EACA,MAAME,WAAW,GAAGT,WAAW,CAACQ,KAAK,IAAEA,KAAK,CAACC,WAAW,CAAC;;EAEzD;EACA;;EAEA,MAAMC,eAAe,GAAGA,CAAA,KAAI;IAE1BJ,QAAQ,CAAC;MAACK,IAAI,EAAC;IAAW,CAAC,CAAC;EAE9B,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAI;IAE1BN,QAAQ,CAAC;MAACK,IAAI,EAAC,UAAU;MAAEE,MAAM,EAAE;IAAC,CAAC,CAAC;EAExC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAI;IAC1BR,QAAQ,CAAC;MAACK,IAAI,EAAC;IAAW,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;IACjCT,QAAQ,CAAC;MAACK,IAAI,EAAC;IAAQ,CAAC,CAAC;EAC3B,CAAC;EAED,oBACER,OAAA;IAAMa,SAAS,EAAEjB,OAAO,CAACQ,OAAQ;IAAAU,QAAA,gBAC/Bd,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlB,OAAA;MAAKa,SAAS,EAAEjB,OAAO,CAACuB,KAAM;MAAAL,QAAA,EAAEV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9ClB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAQoB,OAAO,EAAEb,eAAgB;QAAAO,QAAA,EAAC;MAElC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETlB,OAAA;QAAQoB,OAAO,EAAEX,eAAgB;QAAAK,QAAA,EAAC;MAElC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETlB,OAAA;QAAQoB,OAAO,EAAET,eAAgB;QAAAG,QAAA,EAAC;MAElC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNlB,OAAA;MAAQoB,OAAO,EAAER,oBAAqB;MAAAE,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEX,CAAC;;AAED;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAAAhB,EAAA,CA7FMD,OAAO;EAAA,QAGMH,WAAW,EACZD,WAAW,EAGPA,WAAW;AAAA;AAAAwB,EAAA,GAP3BpB,OAAO;AA+Fb,eAAeA,OAAO;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}