{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n//const initialCartState = { items: [], totalQuantity: 0 };\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    // how to we know which one to increment?\n    // by index? Pass in index through action payload\n\n    // ation payload need be object\n    addToCart(state, action) {\n      // need to push action payload into the array\n\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      // we directly modified the array, this is strictly prohibited in Redux\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    // given id\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"sources":["/Users/jackylian/Downloads/React-Study/Redux Practice/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n//const initialCartState = { items: [], totalQuantity: 0 };\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: { items: [], totalQuantity: 0 },\n  reducers: {\n    // how to we know which one to increment?\n    // by index? Pass in index through action payload\n\n    // ation payload need be object\n    addToCart(state, action) {\n      // need to push action payload into the array\n\n      const newItem = action.payload;\n\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n\n      state.totalQuantity++\n      // we directly modified the array, this is strictly prohibited in Redux\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name:newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price\n      }\n    },\n\n    // given id\n    removeItemFromCart(state, action){\n        const id = action.payload\n        const existingItem = state.items.find(item=>item.id === id)\n\n        state.totalQuantity--\n\n        if(existingItem.quantity === 1){\n            state.items = state.items.filter(item=>item.id !== id)\n        } else {\n            existingItem.quantity--\n            existingItem.totalPrice = existingItem.totalPrice - existingItem.price\n        }\n    }\n  }\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,aAAa,EAAE;EAAE,CAAC;EAC7CC,QAAQ,EAAE;IACR;IACA;;IAEA;IACAC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB;;MAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAE9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MAEvEP,KAAK,CAACH,aAAa,EAAE;MACrB;MACA,IAAI,CAACO,YAAY,EAAE;QACjBJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACfD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO,KAAK;UACzBf,IAAI,EAACQ,OAAO,CAACU;QACf,CAAC,CAAC;MACJ,CAAC,MAAM;QACLR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGT,OAAO,CAACO,KAAK;MACnE;IACF,CAAC;IAED;IACAI,kBAAkBA,CAACb,KAAK,EAAEC,MAAM,EAAC;MAC7B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAE3DP,KAAK,CAACH,aAAa,EAAE;MAErB,IAAGO,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAC;QAC3BV,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACkB,MAAM,CAACR,IAAI,IAAEA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC1D,CAAC,MAAM;QACHH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MAC1E;IACJ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMM,WAAW,GAAGtB,SAAS,CAACuB,OAAO;AAE5C,eAAevB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}