{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialCartState,\n  reducers: {\n    // how to we know which one to increment?\n    // by index? Pass in index through action payload\n\n    // increment by index\n    increment(state, action) {\n      state.items[action.payload].count++;\n    },\n    decrement(state, action) {\n      state.items[action.payload].count--;\n    },\n    // ation payload need be object\n    addToCart(state, action) {\n      // need to push action payload into the array\n\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n\n      // we directly modified the array, this is strictly prohibited in Redux\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","initialCartState","items","totalQuantity","cartSlice","name","reducers","increment","state","action","payload","count","decrement","addToCart","newItem","existingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","cartActions","actions"],"sources":["/Users/jackylian/Downloads/React-Study/Redux Practice/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCartState = { items: [], totalQuantity: 0 };\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialCartState,\n  reducers: {\n    // how to we know which one to increment?\n    // by index? Pass in index through action payload\n\n    // increment by index\n    increment(state, action) {\n      state.items[action.payload].count++;\n    },\n\n    decrement(state, action) {\n      state.items[action.payload].count--;\n    },\n\n    // ation payload need be object\n    addToCart(state, action) {\n      // need to push action payload into the array\n\n      const newItem = action.payload;\n\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n\n      // we directly modified the array, this is strictly prohibited in Redux\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name:newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EAAEC,KAAK,EAAE,EAAE;EAAEC,aAAa,EAAE;AAAE,CAAC;AAExD,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZJ,gBAAgB;EAChBK,QAAQ,EAAE;IACR;IACA;;IAEA;IACAC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACN,KAAK,CAACO,MAAM,CAACC,OAAO,CAAC,CAACC,KAAK,EAAE;IACrC,CAAC;IAEDC,SAASA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACN,KAAK,CAACO,MAAM,CAACC,OAAO,CAAC,CAACC,KAAK,EAAE;IACrC,CAAC;IAED;IACAE,SAASA,CAACL,KAAK,EAAEC,MAAM,EAAE;MACvB;;MAEA,MAAMK,OAAO,GAAGL,MAAM,CAACC,OAAO;MAE9B,MAAMK,YAAY,GAAGP,KAAK,CAACN,KAAK,CAACc,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;;MAEvE;MACA,IAAI,CAACH,YAAY,EAAE;QACjBP,KAAK,CAACN,KAAK,CAACiB,IAAI,CAAC;UACfC,MAAM,EAAEN,OAAO,CAACI,EAAE;UAClBG,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO,KAAK;UACzBhB,IAAI,EAACS,OAAO,CAACU;QACf,CAAC,CAAC;MACJ,CAAC,MAAM;QACLT,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGT,OAAO,CAACO,KAAK;MACnE;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMI,WAAW,GAAGrB,SAAS,CAACsB,OAAO;AAE5C,eAAetB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}